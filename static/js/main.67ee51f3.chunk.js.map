{"version":3,"sources":["img/logo512.png","pages/About.jsx","pages/Contact.jsx","pages/Portfolio.jsx","pages/Projects.jsx","pages/Home.jsx","components/ResponsiveNavigation.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","About","Component","Contact","Portfolio","Projects","Home","ResponsiveNavigation","background","hoverBackground","linkColor","navLinks","logo","useState","navOpen","setNavOpen","hoverIndex","setHoverIndex","className","style","onClick","src","height","width","alt","map","link","index","key","onMouseEnter","onMouseLeave","to","path","color","text","icon","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"kGAAAA,EAAOC,QAAU,IAA0B,qC,gOCY5BC,E,uKARP,OACI,0C,GAHQC,aCULC,E,uKARP,OACI,8C,GAHUD,aCUPE,E,uKARP,OACI,8C,GAHYF,aCUTG,E,uKARP,OACI,6C,GAHWH,aCURI,E,uKARP,OACI,yC,GAHOJ,a,OCmCJK,MAlCf,YAA2F,IAA3DC,EAA0D,EAA1DA,WAAYC,EAA8C,EAA9CA,gBAAiBC,EAA6B,EAA7BA,UAAWC,EAAkB,EAAlBA,SAAUC,EAAQ,EAARA,KAAQ,EACtDC,mBAAS,GAD6C,mBAC9EC,EAD8E,KACrEC,EADqE,OAEhDF,oBAAU,GAFsC,mBAE9EG,EAF8E,KAElEC,EAFkE,KAGtF,OACI,yBACIC,UAAU,qBACVC,MAAO,CAAEX,WAAYA,IACrB,wBACIW,MAAO,CAAEX,WAAYA,GACrBU,UAAYJ,EAAU,SAAW,IAEjC,4BAAQI,UAAU,aAAaE,QAAU,WAAQL,GAAYD,KACzD,yBAAKO,IAAMT,EAAOU,OAAO,OAAOC,MAAM,OAAOC,IAAI,kBAEnDb,EAASc,KAAI,SAACC,EAAMC,GAAP,OACX,wBACIC,IAAMD,EACNE,aAAe,WAAQZ,EAAcU,IACrCG,aAAe,WAAQb,GAAe,IACtCE,MAAO,CAAEX,WAAYQ,IAAeW,EAASlB,GAAmB,OAAU,KAE1E,kBAAC,IAAD,CACIsB,GAAIL,EAAKM,KACTb,MAAO,CAAEc,MAAOvB,IAFpB,MAGMgB,EAAKQ,KACP,uBAAGhB,UAAYQ,EAAKS,e,uBCgCjCC,MAjDf,WA6BE,OACE,yBAAKlB,UAAU,OACb,kBAAC,EAAD,CACEP,SA/BW,CACf,CACEuB,KAAM,OACNF,KAAK,IACLG,KAAM,gBAER,CACED,KAAM,YACNF,KAAK,aACLG,KAAM,qBAER,CACED,KAAM,WACNF,KAAK,YACLG,KAAM,uBAER,CACED,KAAM,QACNF,KAAK,SACLG,KAAM,gBAER,CACED,KAAM,UACNF,KAAM,WACNG,KAAM,sBAQJvB,KAAQA,IACRJ,WAAW,OACfC,gBAAgB,OAChBC,UAAU,SAER,kBAAC,IAAD,KACE,kBAAC,EAAD,CAASsB,KAAK,aACd,kBAAC,EAAD,CAAMA,KAAK,MACX,kBAAC,EAAD,CAAUA,KAAK,cACf,kBAAC,EAAD,CAAOA,KAAK,WACZ,kBAAC,EAAD,CAAWA,KAAK,kBC1CJK,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD4H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.67ee51f3.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo512.1b050d54.png\";","import React, {Component} from 'react'\r\n\r\nclass About extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                About\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default About","import React, {Component} from 'react'\r\n\r\nclass Contact extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Contacts!\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Contact","import React, {Component} from 'react'\r\n\r\nclass Portfolio extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Portfolio\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Portfolio","import React, {Component} from 'react'\r\n\r\nclass Projects extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Projects\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Projects","import React, {Component} from 'react'\r\n\r\nclass Home extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                Home\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home","import React, { useState } from 'react';\r\nimport { Link } from \"@reach/router\";\r\n\r\nfunction ResponsiveNavigation({ background, hoverBackground, linkColor, navLinks, logo }) {\r\n    const [ navOpen, setNavOpen ] = useState(0)\r\n    const [ hoverIndex, setHoverIndex ] = useState(-1)\r\n    return (\r\n        <nav\r\n            className=\"responsive-toolbar\"\r\n            style={{ background: background }}>\r\n            <ul\r\n                style={{ background: background }}\r\n                className={ navOpen ? 'active' : '' }\r\n            >\r\n                <figure className=\"image-logo\" onClick={ () => { setNavOpen(!navOpen) } }>\r\n                    <img src={ logo } height=\"40px\" width=\"40px\" alt=\"toolbar-logo\" />\r\n                </figure>\r\n                { navLinks.map((link, index) => \r\n                    <li\r\n                        key={ index }\r\n                        onMouseEnter={ () => { setHoverIndex(index) } }\r\n                        onMouseLeave={ () => { setHoverIndex(-1) } }\r\n                        style={{ background: hoverIndex === index ? (hoverBackground || '#999') : '' }}\r\n                    >\r\n                        <Link\r\n                            to={link.path}\r\n                            style={{ color: linkColor }}\r\n                        >   { link.text }\r\n                            <i className={ link.icon } />\r\n                        </Link>\r\n                    </li>\r\n                )}\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default ResponsiveNavigation","import React from 'react';\nimport { Router } from '@reach/router'\nimport About from './pages/About.jsx'\nimport Contact from './pages/Contact.jsx'\nimport Portfolio from './pages/Portfolio.jsx'\nimport Projects from './pages/Projects.jsx'\nimport Home from './pages/Home.jsx'\nimport ResponsiveNavigation from './components/ResponsiveNavigation'\nimport logo from './img/logo512.png';\nimport './App.css';\n\nfunction App() {\n  const navLinks = [\n    {\n      text: 'Home',\n      path:'/',\n      icon: 'ion-ios-home'\n    },\n    {\n      text: 'Portfolio',\n      path:'/portfolio',\n      icon: 'ion-ios-briefcase'\n    },\n    {\n      text: 'Projects',\n      path:'/projects',\n      icon: 'ion-ios-folder-open'\n    },\n    {\n      text: 'About',\n      path:'/about',\n      icon: 'ion-ios-body'\n    },\n    {\n      text: 'Contact',\n      path: '/contact',\n      icon: 'ion-ios-megaphone'\n    }\n  ]\n\n  return (\n    <div className=\"App\">\n      <ResponsiveNavigation\n        navLinks = {navLinks}\n        logo = {logo}\n        background=\"#fff\"\n\t\t\t\thoverBackground=\"#ddd\"\n\t\t\t\tlinkColor=\"#777\"\n      />\n      <Router>\n        <Contact path=\"/contact\"/>\n        <Home path=\"/\"/>\n        <Projects path=\"/projects\"/>\n        <About path=\"/about\"/>\n        <Portfolio path=\"/portfolio\"/>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport './assets/scss/base.scss'\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}